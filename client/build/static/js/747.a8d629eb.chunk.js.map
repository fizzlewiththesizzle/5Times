{"version":3,"file":"static/js/747.a8d629eb.chunk.js","mappings":"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","sources":["imageByIndex.js","EmblaCarousel.js","Clock.js","TV.js"],"sourcesContent":["import image1 from './images/slide-1.png'\nimport image2 from './images/slide-2.png'\nimport image3 from './images/slide-3.png'\nimport ad from './images/5times-ad.png'\n\nexport const images = [image1, image2, image3, ad]\n\nconst imageByIndex = (index) => images[index % images.length]\n\nexport default imageByIndex\n","import React from 'react'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\nimport imageByIndex from './imageByIndex'\n\nconst EmblaCarousel = (props) => {\n  const { slides, options } = props\n  const [emblaRef] = useEmblaCarousel(options, [Autoplay({delay : 10000})])\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container embla__round\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n              <img\n                className=\"embla__slide__img\"\n                src={imageByIndex(index)}\n                alt=\"Your alt text\"\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n","import React, { useState, useEffect } from 'react';\n\nconst Clock = () => {\n  const [time, setTime] = useState('');\n\n  const tConvert = (inputTime) => {\n    // Check correct time format and split into components\n    let timeArray = inputTime.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [inputTime];\n\n    if (timeArray.length > 1) { // If time format is correct\n      timeArray = timeArray.slice(1);  // Remove full string match value\n      timeArray[5] = +timeArray[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n      timeArray[0] = +timeArray[0] % 12 || 12; // Adjust hours\n    }\n    return timeArray.join('');\n  }\n\n  const updateClock = () => {\n    const now = new Date();\n    let H = now.getHours();\n    let M = now.getMinutes();\n    let S = now.getSeconds();\n\n    // Pad single-digit values with leading zeros\n    H = H.toString().padStart(2, '0');\n    M = M.toString().padStart(2, '0');\n    S = S.toString().padStart(2, '0');\n\n    const currentTime = H + ':' + M + ':' + S;\n    const convertedTime = tConvert(currentTime);\n\n    setTime(convertedTime);\n  }\n\n  useEffect(() => {\n    // Update the clock every second\n    const intervalId = setInterval(updateClock, 1000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, );\n\n  return (\n    <div id=\"clock\">\n      {time}\n    </div>\n  );\n}\n\nexport default Clock;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport './embla.css';\nimport EmblaCarousel from './EmblaCarousel';\nimport Clock from './Clock';\nimport mac_neo from './Calgary-neo.png';\n\nconst OPTIONS = {}\nconst SLIDE_COUNT = 4\nconst SLIDES = Array.from(Array(SLIDE_COUNT).keys())\nconst iconSize = window.innerWidth >= 3840 ? '70px' : window.innerWidth >= 1920 ? '40px' : '24px';\n\nfunction TV() {\n    const [prayerData, setPrayerData] = useState([]);\n    const [nextPrayer, setNextPrayer] = useState('');\n\n    useEffect(() => {\n        const fetchPrayerData = () => {\n          console.log('Fetching prayer data...');\n          fetch('/api/prayer')\n            .then(response => response.json())\n            .then(data => {\n              console.log('Prayer data received:', data);\n              setPrayerData(data);\n            })\n            .catch(error => console.error('Error fetching prayer data:', error));\n    \n          fetch('/api/nextPrayer')\n            .then(response => response.json())\n            .then(data => {\n              console.log('Next prayer received: ', data);\n              setNextPrayer(data);\n            })\n            .catch(error => console.error('Error fetching next prayer:', error));\n        };\n    \n        // Fetch initial prayer data\n        fetchPrayerData();\n    \n        // Set up interval to fetch data every 5 minutes (300000 milliseconds)\n        const intervalId = setInterval(fetchPrayerData, 300000);\n    \n        // Clean up the interval when the component unmounts\n        return () => clearInterval(intervalId);\n      }, []); // Empty dependency array ensures that this effect runs only once on mount\n\n    return (\n        <React.Fragment>\n            <div className='grid grid-cols-3 gap-4 4xl:gap-8 mt-6 4xl:mt-12 ml-4 4xl:ml-8 mr-4 4xl:mr-8'>\n                <div className='col-span-2'>\n                    <EmblaCarousel slides={SLIDES} options={OPTIONS} />\n                </div>\n                \n                <div>\n                    <table className=\"rounded-2xl 4xl:rounded-3xl overflow-hidden shadow-lg w-full border-collapse\">\n                        <thead className=\"bg-gray-200 dark:bg-gray-800 dark:text-white\">\n                            <tr>\n                            <th className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-3xl 2xl:text-4xl 4xl:text-8xl flex\">Prayer</th>\n                            <th className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-3xl 2xl:text-4xl 4xl:text-8xl text-center\">Adhan</th>\n                            <th className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-3xl 2xl:text-4xl 4xl:text-8xl text-right\">Iqama</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {prayerData.map(prayer => (\n                                <React.Fragment key={prayer.id}>\n                                    <tr className=\"bg-white dark:bg-gray-700 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className=\"flex items-center\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-star\" className=\"mr-3 stroke-emerald-500 4xl:w-50 4xl:h-50\"><polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon></svg>\n                                            <span>Fajr</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Fajr Adhan\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.fajr_adhan} AM</td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-right ${nextPrayer.next === \"Fajr Iqama\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.fajr_iqama} AM</td>\n                                    </tr>\n                                    <tr className=\"bg-gray-100 dark:bg-gray-800 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className='flex items-center'>\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-sunrise\" className='mr-3 stroke-emerald-500'><path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"9\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"8 6 12 2 16 6\"></polyline></svg>\n                                                <span>Sunrise</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Sunrise\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.sunrise} AM</td>\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center xl:text-right 2xl:text-right\">---</td>\n                                    </tr>\n                                    <tr className=\"bg-white dark:bg-gray-700 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className=\"flex items-center\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-sun\" className='mr-3 stroke-emerald-500'><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line></svg>\n                                                <span>Dhuhr</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Dhuhr Adhan\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.dhuhr_adhan} PM</td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-right ${nextPrayer.next === \"Dhuhr Iqama\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.dhuhr_iqama} PM</td>\n                                    </tr>\n                                    <tr className=\"bg-gray-100 dark:bg-gray-800 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className=\"flex items-center\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-circle\" className='mr-3 stroke-emerald-500'><circle cx=\"12\" cy=\"12\" r=\"10\"></circle></svg>\n                                                <span>Asr</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Asr Adhan\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.asr_adhan} PM</td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-right ${nextPrayer.next === \"Asr Iqama\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.asr_iqama} PM</td>\n                                    </tr>\n                                    <tr className=\"bg-white dark:bg-gray-700 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className=\"flex items-center\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-sunset\" className='mr-3 stroke-emerald-500'><path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"2\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"16 5 12 9 8 5\"></polyline></svg>\n                                                <span>Maghrib</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Maghrib Adhan\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.maghrib_adhan} PM</td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-right ${nextPrayer.next === \"Maghrib Iqama\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.maghrib_iqama} PM</td>\n                                    </tr>\n                                    <tr className=\"bg-gray-100 dark:bg-gray-800 dark:text-white\">\n                                        <td className=\"py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl\">\n                                            <div className=\"flex items-center\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={iconSize} height={iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-moon\" className='mr-3 stroke-emerald-500'><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg>\n                                                <span>Isha</span>\n                                            </div>\n                                        </td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-center ${nextPrayer.next === \"Isha Adhan\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.isha_adhan} PM</td>\n                                        <td className={`py-2 px-4 4xl:py-8 4xl:px-8 xl:text-2xl 2xl:text-3xl 4xl:text-7xl text-right ${nextPrayer.next === \"Isha Iqama\" ? 'text-emerald-500 font-bold' : ''}`}>{prayer.isha_iqama} PM</td>\n                                    </tr>\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div className=\"bg-gray-200 dark:bg-gray-800 rounded-2xl 4xl:rounded-3xl overflow-hidden text-center text-emerald-500 font-semibold shadow-lg xl:text-4xl 2xl:text-5xl 4xl:text-8xl px-4 mt-4 4xl:mt-8 space-y-8\">\n                        <h1 className=\"pt-4\">\n                            {prayerData.length > 0\n                            ? <span>1<sup>st</sup> Jumuah: {prayerData[0].jumuah_1}</span> \n                            : ''}\n                        </h1>\n                        <h1 className='pb-4'>\n                            {prayerData.length > 0\n                            ? <span>2<sup>nd</sup> Jumuah: {prayerData[0].jumuah_2}</span> \n                            : ''}\n                        </h1>\n                    </div>\n                </div>\n\n                <div className='pl-4 4xl:pl-8 dark:text-white col-span-1 bg-gray-200 dark:bg-gray-800 rounded-2xl 4xl:rounded-3xl overflow-hidden shadow-lg'>\n                    <h1 className='text-6xl 4xl:text-9xl font-bold pt-4'>Al-Salam Centre</h1>\n                    <h1 className=\"text-5xl 4xl:text-8xl\">\n                        {prayerData.length > 0\n                        ? `${prayerData[0].month_s} ${prayerData[0].day_s}, ${prayerData[0].year_s}`\n                        : ''}\n                    </h1>\n                    <h1 className=\"text-4.5xl 4xl:text-7.5xl\">\n                        {prayerData.length > 0\n                        ? `${prayerData[0].hijri_month} ${prayerData[0].hijri_day}, ${prayerData[0].hijri_year} AH`\n                        : ''}\n                    </h1>\n                    <img src={mac_neo} alt=\"logo\" className='pt-4 w-4/5 h-auto pb-4'></img>\n                </div>\n\n                <div className='rounded-2xl 4xl:rounded-3xl overflow-hidden shadow-lg bg-gray-200 dark:bg-gray-800 text-center flex flex-col justify-center items-center'>\n                    <h1 className=\"text-6xl 4xl:text-9xl dark:text-white font-bold pt-4\"> Next Up: </h1>\n                    <h1 className='text-6xl 4xl:text-10xl font-semibold text-emerald-500 my-auto'>{nextPrayer.next}</h1>\n                </div>\n\n                <div className='dark:text-white text-center xl:text-7xl 2xl:text-8xl 4xl:text-12xl clock-font font-bold flex justify-center items-center'>\n                    <Clock></Clock>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default TV;\n"],"names":["images","index","length","props","slides","options","emblaRef","useEmblaCarousel","Autoplay","delay","_jsx","className","children","ref","map","_jsxs","src","imageByIndex","alt","Clock","time","setTime","useState","updateClock","now","Date","H","getHours","M","getMinutes","S","getSeconds","toString","padStart","convertedTime","inputTime","timeArray","match","slice","join","tConvert","useEffect","intervalId","setInterval","clearInterval","id","OPTIONS","SLIDES","Array","from","keys","iconSize","window","innerWidth","prayerData","setPrayerData","nextPrayer","setNextPrayer","fetchPrayerData","console","log","fetch","then","response","json","data","catch","error","React","EmblaCarousel","prayer","xmlns","width","height","viewBox","fill","stroke","class","points","concat","next","fajr_adhan","fajr_iqama","d","x1","y1","x2","y2","sunrise","cx","cy","r","dhuhr_adhan","dhuhr_iqama","asr_adhan","asr_iqama","maghrib_adhan","maghrib_iqama","isha_adhan","isha_iqama","jumuah_1","jumuah_2","month_s","day_s","year_s","hijri_month","hijri_day","hijri_year","mac_neo"],"sourceRoot":""}